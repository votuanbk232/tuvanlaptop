
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_LayoutNguoiDung.cshtml";
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Speech API</title>
    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <style>
        /*body {
            font-family: monospace;
            font-size: 22px;
        }*/
        #speech_content{
            width:80%;
            float:right;
            margin-top:-200px;
            border:1px solid red;
            background-color:red;
            
        }
    </style>
</head>
<div id="speech_content">
    <div style="text-align:center">Hãy nói yêu cầu của bạn bằng tiếng anh</div>
    @*<form action="/Speech/Index" method="post">*@
       @using (Ajax.BeginForm(
                     "Index",
                     "Speech",
                     null,
                     new AjaxOptions
                     {
                         UpdateTargetId = "speed_result",
                         InsertionMode = InsertionMode.Replace,
                         HttpMethod = "POST"
                     },
                     new { id = "SampleForm" }
                     ))
       {
            @*text cuối cùng*@
            <span name="text" id="speech" style="text-align:center"></span>
            @*text đang nói*@
            <span id="interim" style="text-align:center"></span>
            @*giá trị bằng text cuối cùng*@
            <input style="margin:20px;" type="text" name="text" id="text" />
            @*hiện kết quả sử dụng ajax*@
            <input style="text-align:center" type="submit" name="submit" id="submit" value="Hiển thị kết quả" />
            @*@Html.Label("Kết quả",htmlAttributes: new { @class="ShowList"})*@    
       }
    @*</form>*@
    <div id="speed_result">

    </div>
        @*<div class="model fade" id="myModel">
            <div class="model body" id="Div1">

            </div>
        </div>
        <div id="sanpham_result">

        </div>*@
</div>

@*kết quả sau khi click*@

<script>
    //$(document).ready(function () {
    //    $("#submit").click(function () {
    //        var search = $("#text").val();
    //        $("sanpham_result").load("/Speech/GetView", { search: search });
    //    });
    //})
   

   
    function upgrade() {
      alert('Please use Google Chrome for best experience');
    }

    window.onload = function () {
        
       
       
     

      if (!(window.webkitSpeechRecognition) && !(window.speechRecognition)) {
        upgrade();
      } else {
          $('[name="text"]').on('change', function () {
               $('[name="speech"]').val($(this).val());
          });

        var recognizing,
        transcription = document.getElementById('speech'),
        interim_span = document.getElementById('interim');
        message = document.getElementById('text');
        
        interim_span.style.opacity = '0.5';


        function reset() {
          recognizing = false;
          interim_span.innerHTML = '';
          transcription.innerHTML = '';
          message.innerHTML = '';
          speech.start();
        }

        var speech = new webkitSpeechRecognition() || speechRecognition();

        speech.continuous = true;
        speech.interimResults = true;
        speech.lang = 'en-US'; // check google web speech example source for more lanuages
        speech.start(); //enables recognition on default

        speech.onstart = function() {
            // When recognition begins
            recognizing = true;
        };

        speech.onresult = function(event) {
          // When recognition produces result
          var interim_transcript = '';
          var final_transcript = '';
          var final_message = '';

          // main for loop for final and interim results
          for (var i = event.resultIndex; i < event.results.length; ++i) {
            if (event.results[i].isFinal) {
              final_transcript += event.results[i][0].transcript;
            } else {
                interim_transcript += event.results[i][0].transcript;
                final_message += event.results[i][0].message;
            }
          }
          transcription.innerHTML = final_transcript;
          interim_span.innerHTML = interim_transcript;
            //gán giá trị input bằng giá trị text cuối cùng
          document.getElementById("text").value = final_transcript;
        };

        speech.onerror = function(event) {
            // Either 'No-speech' or 'Network connection error'
            console.error(event.error);
        };

        speech.onend = function() {
            // When recognition ends
            reset();
        };
        

      }
     
    };
</script>
</html>

